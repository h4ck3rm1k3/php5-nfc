<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('libnfc')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_libnfc.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('libnfc.so')) return;
    } else {
      if (!dl('libnfc.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class libnfc {
	static function nfc_init($context) {
		nfc_init($context);
	}

	static function nfc_exit($context) {
		nfc_exit($context);
	}

	static function nfc_register_driver($driver) {
		return nfc_register_driver($driver);
	}

	static function nfc_open($context,$connstring) {
		return nfc_open($context,$connstring);
	}

	static function nfc_close($pnd) {
		nfc_close($pnd);
	}

	static function nfc_abort_command($pnd) {
		return nfc_abort_command($pnd);
	}

	static function nfc_list_devices($context,$connstrings,$connstrings_len) {
		return nfc_list_devices($context,$connstrings,$connstrings_len);
	}

	static function nfc_idle($pnd) {
		return nfc_idle($pnd);
	}

	static function nfc_initiator_init($pnd) {
		return nfc_initiator_init($pnd);
	}

	static function nfc_initiator_init_secure_element($pnd) {
		return nfc_initiator_init_secure_element($pnd);
	}

	static function nfc_initiator_select_passive_target($pnd,$nm,$pbtInitData,$szInitData,$pnt) {
		return nfc_initiator_select_passive_target($pnd,$nm,$pbtInitData,$szInitData,$pnt);
	}

	static function nfc_initiator_list_passive_targets($pnd,$nm,$ant,$szTargets) {
		return nfc_initiator_list_passive_targets($pnd,$nm,$ant,$szTargets);
	}

	static function nfc_initiator_poll_target($pnd,$pnmTargetTypes,$szTargetTypes,$uiPollNr,$uiPeriod,$pnt) {
		return nfc_initiator_poll_target($pnd,$pnmTargetTypes,$szTargetTypes,$uiPollNr,$uiPeriod,$pnt);
	}

	static function nfc_initiator_select_dep_target($pnd,$ndm,$nbr,$pndiInitiator,$pnt,$timeout) {
		return nfc_initiator_select_dep_target($pnd,$ndm,$nbr,$pndiInitiator,$pnt,$timeout);
	}

	static function nfc_initiator_poll_dep_target($pnd,$ndm,$nbr,$pndiInitiator,$pnt,$timeout) {
		return nfc_initiator_poll_dep_target($pnd,$ndm,$nbr,$pndiInitiator,$pnt,$timeout);
	}

	static function nfc_initiator_deselect_target($pnd) {
		return nfc_initiator_deselect_target($pnd);
	}

	static function nfc_initiator_transceive_bytes($pnd,$pbtTx,$szTx,$pbtRx,$szRx,$timeout) {
		return nfc_initiator_transceive_bytes($pnd,$pbtTx,$szTx,$pbtRx,$szRx,$timeout);
	}

	static function nfc_initiator_transceive_bits($pnd,$pbtTx,$szTxBits,$pbtTxPar,$pbtRx,$szRx,$pbtRxPar) {
		return nfc_initiator_transceive_bits($pnd,$pbtTx,$szTxBits,$pbtTxPar,$pbtRx,$szRx,$pbtRxPar);
	}

	static function nfc_initiator_transceive_bytes_timed($pnd,$pbtTx,$szTx,$pbtRx,$szRx,$cycles) {
		return nfc_initiator_transceive_bytes_timed($pnd,$pbtTx,$szTx,$pbtRx,$szRx,$cycles);
	}

	static function nfc_initiator_transceive_bits_timed($pnd,$pbtTx,$szTxBits,$pbtTxPar,$pbtRx,$szRx,$pbtRxPar,$cycles) {
		return nfc_initiator_transceive_bits_timed($pnd,$pbtTx,$szTxBits,$pbtTxPar,$pbtRx,$szRx,$pbtRxPar,$cycles);
	}

	static function nfc_initiator_target_is_present($pnd,$pnt) {
		return nfc_initiator_target_is_present($pnd,$pnt);
	}

	static function nfc_target_init($pnd,$pnt,$pbtRx,$szRx,$timeout) {
		return nfc_target_init($pnd,$pnt,$pbtRx,$szRx,$timeout);
	}

	static function nfc_target_send_bytes($pnd,$pbtTx,$szTx,$timeout) {
		return nfc_target_send_bytes($pnd,$pbtTx,$szTx,$timeout);
	}

	static function nfc_target_receive_bytes($pnd,$pbtRx,$szRx,$timeout) {
		return nfc_target_receive_bytes($pnd,$pbtRx,$szRx,$timeout);
	}

	static function nfc_target_send_bits($pnd,$pbtTx,$szTxBits,$pbtTxPar) {
		return nfc_target_send_bits($pnd,$pbtTx,$szTxBits,$pbtTxPar);
	}

	static function nfc_target_receive_bits($pnd,$pbtRx,$szRx,$pbtRxPar) {
		return nfc_target_receive_bits($pnd,$pbtRx,$szRx,$pbtRxPar);
	}

	static function nfc_strerror($pnd) {
		return nfc_strerror($pnd);
	}

	static function nfc_strerror_r($pnd,$buf,$buflen) {
		return nfc_strerror_r($pnd,$buf,$buflen);
	}

	static function nfc_perror($pnd,$s) {
		nfc_perror($pnd,$s);
	}

	static function nfc_device_get_last_error($pnd) {
		return nfc_device_get_last_error($pnd);
	}

	static function nfc_device_get_name($pnd) {
		return nfc_device_get_name($pnd);
	}

	static function nfc_device_get_connstring($pnd) {
		return nfc_device_get_connstring($pnd);
	}

	static function nfc_device_get_supported_modulation($pnd,$mode,$supported_mt) {
		return nfc_device_get_supported_modulation($pnd,$mode,$supported_mt);
	}

	static function nfc_device_get_supported_baud_rate($pnd,$nmt,$supported_br) {
		return nfc_device_get_supported_baud_rate($pnd,$nmt,$supported_br);
	}

	static function nfc_device_set_property_int($pnd,$property,$value) {
		return nfc_device_set_property_int($pnd,$property,$value);
	}

	static function nfc_device_set_property_bool($pnd,$property,$bEnable) {
		return nfc_device_set_property_bool($pnd,$property,$bEnable);
	}

	static function iso14443a_crc($pbtData,$szLen,$pbtCrc) {
		iso14443a_crc($pbtData,$szLen,$pbtCrc);
	}

	static function iso14443a_crc_append($pbtData,$szLen) {
		iso14443a_crc_append($pbtData,$szLen);
	}

	static function iso14443b_crc($pbtData,$szLen,$pbtCrc) {
		iso14443b_crc($pbtData,$szLen,$pbtCrc);
	}

	static function iso14443b_crc_append($pbtData,$szLen) {
		iso14443b_crc_append($pbtData,$szLen);
	}

	static function iso14443a_locate_historical_bytes($pbtAts,$szAts,$pszTk) {
		return iso14443a_locate_historical_bytes($pbtAts,$szAts,$pszTk);
	}

	static function nfc_free($p) {
		nfc_free($p);
	}

	static function nfc_version() {
		return nfc_version();
	}

	static function nfc_device_get_information_about($pnd,$buf) {
		return nfc_device_get_information_about($pnd,$buf);
	}

	static function str_nfc_modulation_type($nmt) {
		return str_nfc_modulation_type($nmt);
	}

	static function str_nfc_baud_rate($nbr) {
		return str_nfc_baud_rate($nbr);
	}

	static function str_nfc_target($buf,$pnt,$verbose) {
		return str_nfc_target($buf,$pnt,$verbose);
	}

	const NFC_SUCCESS = NFC_SUCCESS;

	const NFC_EIO = NFC_EIO;

	const NFC_EINVARG = NFC_EINVARG;

	const NFC_EDEVNOTSUPP = NFC_EDEVNOTSUPP;

	const NFC_ENOTSUCHDEV = NFC_ENOTSUCHDEV;

	const NFC_EOVFLOW = NFC_EOVFLOW;

	const NFC_ETIMEOUT = NFC_ETIMEOUT;

	const NFC_EOPABORTED = NFC_EOPABORTED;

	const NFC_ENOTIMPL = NFC_ENOTIMPL;

	const NFC_ETGRELEASED = NFC_ETGRELEASED;

	const NFC_ERFTRANS = NFC_ERFTRANS;

	const NFC_EMFCAUTHFAIL = NFC_EMFCAUTHFAIL;

	const NFC_ESOFT = NFC_ESOFT;

	const NFC_ECHIP = NFC_ECHIP;
}

/* PHP Proxy Classes */

?>
