/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#ifndef PHP_LIBNFC_H
#define PHP_LIBNFC_H

extern zend_module_entry libnfc_module_entry;
#define phpext_libnfc_ptr &libnfc_module_entry

#ifdef PHP_WIN32
# define PHP_LIBNFC_API __declspec(dllexport)
#else
# define PHP_LIBNFC_API
#endif

#ifdef ZTS
#include "TSRM.h"
#endif

PHP_MINIT_FUNCTION(libnfc);
PHP_MSHUTDOWN_FUNCTION(libnfc);
PHP_RINIT_FUNCTION(libnfc);
PHP_RSHUTDOWN_FUNCTION(libnfc);
PHP_MINFO_FUNCTION(libnfc);

ZEND_NAMED_FUNCTION(_wrap_nfc_init);
ZEND_NAMED_FUNCTION(_wrap_nfc_exit);
ZEND_NAMED_FUNCTION(_wrap_nfc_register_driver);
ZEND_NAMED_FUNCTION(_wrap_nfc_open);
ZEND_NAMED_FUNCTION(_wrap_nfc_close);
ZEND_NAMED_FUNCTION(_wrap_nfc_abort_command);
ZEND_NAMED_FUNCTION(_wrap_nfc_list_devices);
ZEND_NAMED_FUNCTION(_wrap_nfc_idle);
ZEND_NAMED_FUNCTION(_wrap_nfc_initiator_init);
ZEND_NAMED_FUNCTION(_wrap_nfc_initiator_init_secure_element);
ZEND_NAMED_FUNCTION(_wrap_nfc_initiator_select_passive_target);
ZEND_NAMED_FUNCTION(_wrap_nfc_initiator_list_passive_targets);
ZEND_NAMED_FUNCTION(_wrap_nfc_initiator_poll_target);
ZEND_NAMED_FUNCTION(_wrap_nfc_initiator_select_dep_target);
ZEND_NAMED_FUNCTION(_wrap_nfc_initiator_poll_dep_target);
ZEND_NAMED_FUNCTION(_wrap_nfc_initiator_deselect_target);
ZEND_NAMED_FUNCTION(_wrap_nfc_initiator_transceive_bytes);
ZEND_NAMED_FUNCTION(_wrap_nfc_initiator_transceive_bits);
ZEND_NAMED_FUNCTION(_wrap_nfc_initiator_transceive_bytes_timed);
ZEND_NAMED_FUNCTION(_wrap_nfc_initiator_transceive_bits_timed);
ZEND_NAMED_FUNCTION(_wrap_nfc_initiator_target_is_present);
ZEND_NAMED_FUNCTION(_wrap_nfc_target_init);
ZEND_NAMED_FUNCTION(_wrap_nfc_target_send_bytes);
ZEND_NAMED_FUNCTION(_wrap_nfc_target_receive_bytes);
ZEND_NAMED_FUNCTION(_wrap_nfc_target_send_bits);
ZEND_NAMED_FUNCTION(_wrap_nfc_target_receive_bits);
ZEND_NAMED_FUNCTION(_wrap_nfc_strerror);
ZEND_NAMED_FUNCTION(_wrap_nfc_strerror_r);
ZEND_NAMED_FUNCTION(_wrap_nfc_perror);
ZEND_NAMED_FUNCTION(_wrap_nfc_device_get_last_error);
ZEND_NAMED_FUNCTION(_wrap_nfc_device_get_name);
ZEND_NAMED_FUNCTION(_wrap_nfc_device_get_connstring);
ZEND_NAMED_FUNCTION(_wrap_nfc_device_get_supported_modulation);
ZEND_NAMED_FUNCTION(_wrap_nfc_device_get_supported_baud_rate);
ZEND_NAMED_FUNCTION(_wrap_nfc_device_set_property_int);
ZEND_NAMED_FUNCTION(_wrap_nfc_device_set_property_bool);
ZEND_NAMED_FUNCTION(_wrap_iso14443a_crc);
ZEND_NAMED_FUNCTION(_wrap_iso14443a_crc_append);
ZEND_NAMED_FUNCTION(_wrap_iso14443b_crc);
ZEND_NAMED_FUNCTION(_wrap_iso14443b_crc_append);
ZEND_NAMED_FUNCTION(_wrap_iso14443a_locate_historical_bytes);
ZEND_NAMED_FUNCTION(_wrap_nfc_free);
ZEND_NAMED_FUNCTION(_wrap_nfc_version);
ZEND_NAMED_FUNCTION(_wrap_nfc_device_get_information_about);
ZEND_NAMED_FUNCTION(_wrap_str_nfc_modulation_type);
ZEND_NAMED_FUNCTION(_wrap_str_nfc_baud_rate);
ZEND_NAMED_FUNCTION(_wrap_str_nfc_target);
#endif /* PHP_LIBNFC_H */
